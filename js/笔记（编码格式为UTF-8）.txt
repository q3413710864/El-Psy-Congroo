javascript---------------------------------------------------------------
它是一种基于对象和时间驱动的客户端脚本语言。
它起源于Netscape公司的livescript语言。
它诞生于1995年，它是一种直译式的脚本语言，是一种动态类型，弱类型的语言。它被解析为JavaScript引擎，为浏览器的
一部分。
它是由ECMAscript，DOM和BOM组成。
它的三种输出方法。
document.write('word')
console.log("控制台输出")
alert('弹框')
变量-------☆--------
用关键字var 进行定义。比如 var a = 1；
进入严格模式的话：‘use strict’
声明变量的几种方式：
var a = 1;
test a = 1;
widow.test=0;
js数据的类型-------------------★-------------------------------
Number 数字类型 NaN NAN不等于任何数，NAN不等于NAN。

String 字符串类型  ‘字符串类型’

Boolean 布尔类型   true,false

Undefined类型 未定义，表示一个未声明的变量。

Null类型 空

object 对象类型 

type of 用来返回该数据时哪一种数据类型。
Number()可以把数字字符串转换成数字，如果是Null的话返回0，布尔值的话，true为1,false为0.
parseIng()可以将字符串转换成整数的数值，如果第一个字符串为空格的话它会一直找到一个非空字符的位置。
如果第一个数字不是数字符号或者是负号的话返回NAN，
如果第一个是数字的话它会一直解析，知道遇到第一个非数字符号为止。如果开头为0的话会当做八进制解析，如果为0X的话会当做
16进制解析。
parseFloat(string) 把字符串转换为浮点类型。
String()将任何类型的值转换为字符串
Boolean()将任何值转换为布尔值
运算符
+ - * /
加减乘除
++递增
--递减
%取模（余数）运算符
== 相等
!= 非等号 不等
=== 全等，只有在无需类型转换的时候相等才会给true
< > <= >=
小于，大于，小于等于，大于等于
逻辑运算符：
&&逻辑与，当两个数
||逻辑或
!逻辑非 对一个表达式执行反操作
赋值运算符。
= 等于号
*= 乘法赋值
/= 除法赋值
%= 取模赋值
+= 加法赋值
-= 减法赋值

条件运算符
？:
语法为条件？结果:结果

逗号运算符
用逗号可以再一条语句中执行多个运算。
语句-----------------------------------------------------
声明语句。
var 声明一个变量
function 定义一个函数 return 返回函数中某个值，并终止函数
条件语句。

if()执行一种基本的控制，if(a==1)如果结果为true的话执行，否则的话不执行。
else if的第二种形式，一般用于if中，如 if(a==1)是true的话执行否则执行else里面的
else if 用于衔接多种判断。

switch()  将去寻找case中的表达式是否和语句的结果相同，如果相同的话执行case对应的代码
否则的话执行default中的代码，如果没有default的话直接跳过所有的代码。
case:
case:
default:

for循环语句.
for(初始化操作，循环条件判断，技术变量的更新)
break 退出循环
continue 转到下一次循环

while循环
while(条件){}
当条件为真时重复循环否则的话退出循环，如果使用while(true)的话会创建一个死循环。

do while循环
do{}while(逻辑)
和while差不多一样，但是它会不管逻辑条件是否满足都会进行一次循环。

函数-----------------------
function 函数名字 （形参）{}
var 函数名字=function（形参）{}
函数调用-----
函数名字（实参）
onclick="函数名字（实参）"
函数变量作用域---------------------------
局部变量..
定义在函数内部的变量，只能在函数内使用。 a = 1;除外，不用val声明的变量除外。
全局变量..
定义在函数外部的变量,比如 var a = 1; a = 1; window.a = 1;

------------------------------Math对象-------------------------------------------------
max(x,y) 返回x和y中的最高值。参数为两个或者两个以上。
min(x,y)返回x和y中的最低值。参数在两个或两个以上。
Math.ceil(x) ceil可以对一个数进行上舍入
Math.floor(X) floor()方法可以对一个数进行向下舍入。
Math.round(X) round()方法可以把一个数舍入为最近的整数。
Math.random() random()方法可返回一个在0和1之间的一个随机数。
Math.abs(x) 返回数的绝对值
Math.exp(x) exp()方法可返回e的x次幂的值。
Math.log(x) 返回数的自然对数（底数为e）
Math.pow(x,y) pow()方法可返回一个数的平方根。
-------------------------------String---------------------------------------------------------
String对象用于处理文本字符串。
charAt(index) 返回字符串中某个位置的数据，index为下标。
charCodeAt(index) 返回指定位置字符的Unicode编码。
fromCharCode（）可以接受一个指定的Uncode值，返回一个字符串。
search()，可以找到某个字符串的起始位置。比如 str = new String('abcde') alert(str.search('c'));
replace(‘被替换’，‘替换’)可以用一些字符替换字符串中的某个字符，返回新的字符串，
match()
substring（）用于提取介于两个指定下标之间的字符串。
substr()用于抽取从指定下标开始指定数目的字符串。
split(),分割字符串.
concat()用来连接两个或者是很多个字符串。
slice()提取字符串中的某个部分，值可以为负数，-1为字符串最后一个字符，-2为倒数第二个。
第二个值为要抽取片段的结尾的下标。如果没有这个参数的话，要提取的就是开始下标到字符串结尾
的位置。
indexOf（）可以返回某个指定字符中首次出现的位置。如果为-1的话代表要搜索的字符串没有出现。
lastIndexOf()可以返回一个指定字符串最后出现的位置。
toLowerCase() 把所有的字符串转换为小写
toUpperCase()把字符串转换为大写。
----------------------------------2017/9/26--------------------------------------------------
